/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package kre18_lab08;

import static java.lang.Math.cos;
import static java.lang.Math.sin;
import static java.lang.Math.tan;
import java.math.BigDecimal;
import javax.swing.JOptionPane;

/**
 *
 * @author ruslan
 */
public class Form8 extends javax.swing.JFrame {

    /**
     * Creates new form Form8
     */
    public Form8() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel_task = new javax.swing.JLabel();
        jButton_generate = new javax.swing.JButton();
        jButton_solver = new javax.swing.JButton();
        jButton_clean = new javax.swing.JButton();
        jButton_exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Лабораторная 8");
        setIconImage(java.awt.Toolkit.getDefaultToolkit().createImage(getClass().getResource("icon.png")));
        setResizable(false);
        getContentPane().setLayout(null);

        jTable1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "K(i)", "Y(i)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setGridColor(new java.awt.Color(0, 0, 255));
        jTable1.setRowHeight(20);
        jTable1.setShowGrid(true);
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 380, 222);

        jLabel_task.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kre18_lab08/task8.png"))); // NOI18N
        getContentPane().add(jLabel_task);
        jLabel_task.setBounds(0, 250, 378, 130);

        jButton_generate.setText("Генерация");
        jButton_generate.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButton_generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_generateActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_generate);
        jButton_generate.setBounds(0, 220, 90, 23);

        jButton_solver.setText("Решение");
        jButton_solver.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButton_solver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_solverActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_solver);
        jButton_solver.setBounds(100, 220, 90, 23);

        jButton_clean.setText("Очистить");
        jButton_clean.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButton_clean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cleanActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_clean);
        jButton_clean.setBounds(190, 220, 90, 23);

        jButton_exit.setText("Выход");
        jButton_exit.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButton_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_exitActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_exit);
        jButton_exit.setBounds(290, 220, 90, 23);

        setSize(new java.awt.Dimension(388, 411));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_solverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_solverActionPerformed
        /**
         * ************************************************ Выполнение задания
         */
        int i = 0;
        while (i < jTable1.getRowCount()) {
            if (jTable1.getValueAt(i, 0) == null) {
                JOptionPane.showMessageDialog(rootPane, "Проверьте правильность \nзаполнения столбца K(i)", "ОШИБКА ВВОДА!!!", JOptionPane.ERROR_MESSAGE);
                return;
            }
            i++;
        }
        /*-----------------------------------------------------------*/
        double y = 0, sum = 0, pr = 1;
        i = 0;
        while (i < jTable1.getRowCount()) {
            sum += Integer.parseInt(jTable1.getValueAt(i, 0).toString());
            pr *= Integer.parseInt(jTable1.getValueAt(i, 0).toString());
            i++;
        }
        i = 0;
        while (i < jTable1.getRowCount()) {
            if (Integer.parseInt(jTable1.getValueAt(i, 0).toString()) < 0) {
                y = sin(sum) / Integer.parseInt(jTable1.getValueAt(i, 0).toString());
                jTable1.setValueAt(BigDecimal.valueOf(y).setScale(2, BigDecimal.ROUND_HALF_DOWN).doubleValue(), i, 1);
            }
            if (Integer.parseInt(jTable1.getValueAt(i, 0).toString()) == 0) {
                y = Math.pow(cos(Math.sqrt(Double.parseDouble(jTable1.getValueAt(i, 0).toString()))), 2);
                jTable1.setValueAt(BigDecimal.valueOf(y).setScale(2, BigDecimal.ROUND_HALF_DOWN).doubleValue(), i, 1);
            }
            if (Integer.parseInt(jTable1.getValueAt(i, 0).toString()) > 0) {
                y = pr - tan(Integer.parseInt(jTable1.getValueAt(i, 0).toString()));
                jTable1.setValueAt(BigDecimal.valueOf(y).setScale(2, BigDecimal.ROUND_HALF_DOWN).doubleValue(), i, 1);
            }
            i++;
        }
    }//GEN-LAST:event_jButton_solverActionPerformed

    private void jButton_generateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_generateActionPerformed
        // Случайные числа, положительные и отрицательные
        jButton_cleanActionPerformed(null);
        int i = 0;
        while (i < jTable1.getRowCount()) {
            if ((Math.round(Math.random() * 100)) % 2 == 0) {
                jTable1.setValueAt(Math.round(Math.random() * 100), i, 0);
            } else {
                jTable1.setValueAt(Math.round(Math.random() * -100), i, 0);
            }
            i++;
        }
    }//GEN-LAST:event_jButton_generateActionPerformed

    private void jButton_cleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cleanActionPerformed
        // Очистка таблицы
        int i = 0;
        while (i < jTable1.getRowCount()) {
            int j = 0;
            while (j < jTable1.getColumnCount()) {
                jTable1.setValueAt(null, i, j);
                j++;
                /**
                 * очень интересный момент, если тут поставить пустую строку в
                 * очистку, тогда не будет срабатывать защита, так как она
                 * работает через "null"
                 */
            }
            i++;
        }
    }//GEN-LAST:event_jButton_cleanActionPerformed

    private void jButton_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_exitActionPerformed
        // Выход из программы
        System.exit(0);
    }//GEN-LAST:event_jButton_exitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form8().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_clean;
    private javax.swing.JButton jButton_exit;
    private javax.swing.JButton jButton_generate;
    private javax.swing.JButton jButton_solver;
    private javax.swing.JLabel jLabel_task;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
